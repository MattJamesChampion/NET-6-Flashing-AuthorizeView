@page "/"
@using System.Threading
@implements IDisposable

<AuthorizeView Policy="TestPolicy">
    <Authorized>
        <h1>Text inside an <code>AuthorizeView</code> (authorized) element</h1>
    </Authorized>
    <NotAuthorized>
        <h1>Text inside an <code>AuthorizeView</code> (not authorized) element</h1>
    </NotAuthorized>
</AuthorizeView>
<h1>Text outside an <code>AuthorizeView</code> element</h1>

@code {
    public List<string> Messages = new();
    protected CancellationTokenSource TimerTokenSource;

    protected override async Task OnInitializedAsync()
    {
        TimerTokenSource = new CancellationTokenSource();
        StartTimerLoop(TimerTokenSource.Token);

        await base.OnInitializedAsync();
    }

    protected async void StartTimerLoop(CancellationToken ct)
    {
        try
        {
            while (true)
            {
                ct.ThrowIfCancellationRequested();

                StateHasChanged();

                await Task.Delay(500, ct);
            }
        }
        catch (OperationCanceledException)
        {
        }
        catch (Exception)
        {
        }
    }

    public void Dispose()
    {
        TimerTokenSource?.Cancel();
        TimerTokenSource?.Dispose();
    }
}
